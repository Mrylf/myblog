{"meta":{"title":"shell blog","subtitle":"","description":"一个萌新分享自己仅存的技术的地方","author":"sheep","url":"http://example.com","root":"/"},"pages":[{"title":"","date":"2022-12-26T12:20:44.033Z","updated":"2022-12-26T12:20:44.033Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"About meHi,我是sheel 欢迎来到我的个人博客 他现在似乎不在呢…就让咱简单介绍下吧 - 平平无奇的大学生一枚 没有精通的 前端、python、Linux、MySQL，这些都会一点 联系方式： QQ邮箱：&#50;&#51;&#x36;&#52;&#x34;&#x38;&#x33;&#x30;&#55;&#x39;&#64;&#x71;&#x71;&#46;&#99;&#x6f;&#x6d;"},{"title":"所有分类","date":"2022-12-26T04:42:41.331Z","updated":"2022-12-26T04:42:41.331Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2022-12-26T04:42:57.130Z","updated":"2022-12-26T04:42:57.130Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"My friends","date":"2022-12-29T09:53:14.606Z","updated":"2022-12-29T09:53:14.606Z","comments":true,"path":"friends/index.html","permalink":"http://example.com/friends/index.html","excerpt":"","text":""}],"posts":[{"title":"Docker简介","slug":"Docker简介","date":"2023-01-02T04:35:39.000Z","updated":"2023-01-02T05:13:24.514Z","comments":true,"path":"2023/01/02/Docker简介/","link":"","permalink":"http://example.com/2023/01/02/Docker%E7%AE%80%E4%BB%8B/","excerpt":"","text":"1.什么是容器容器可以看作是一个简易的沙箱,程序再沙箱中运行,可以不用在意外界环境,容器将外界和运行程序相隔离 2.为什么会出现docker在开发过程,您使用了一台笔记本开发应用程序,这时你的笔记本具有特定的环境,特定的一些配置,其他同事的电脑配置环境不同.您在开发项目之后需要其他同事进行部署实施,因为客户电脑配置或软件环境的不同,会出现安装不上的问题. 现在我们就需要使用到容器.Docker之所以发展如此迅速,也是因为再开发过程中对于程序移植的标准化解决方案————系统平滑移植,容器虚拟化技术 3.容器与传统虚拟技术一、相同: 都是对于程序的隔离和封装 二、不同： 容器只需要再当前系统中开辟一块用户空间,与当前操作系统的其他进程相隔离 传统虚拟机:(VMare)会创建完整的虚拟机出来,要运行应用程序,需要进行部署和依赖,此外还需要安装整个操作系统 4.什么是DockerDocker是基于Go语言实现的云开源项目 Docker的主要目标是”Build Ship and Run Any App AnyWhere”,也就是说通过对应用组件的封装,分发,部署,运行等生命周期的管理,使用户的APP及运行环境能够做到“一次镜像,处处运行” Linux容器技术的出现就解决了这样一个问题,而Docker就是再它的基础上发展过来的.将应用打包成镜像通过镜像成为运行再Docker容器上面的实例,而Docker容器再任何操作系统上都是一致的,这就实现了跨平台,跨服务器.只需要一次配置好环境,换到别的计算机上就可以一键部署,大大简化了操作 5.Docker的优点一、快速，一致地交付您的应用程序 Docker 允许开发人员使用自己提供的应用程序或服务的本地容器在标准化环境中工作，从而简化了开发的生命周期。 二、响应式部署和扩展 Docker 是基于容器的平台，允许高度可移植的工作负载。 Docker 容器可以在开发人员的本机上，数据中心的物理或虚拟机上，云服务上或混合环境中运行。 Docker 的可移植性和轻量级的特性，还可以让使用者轻松地完成动态管理的工作负担，并根据业务需求指示，实时扩展或拆除应用程序和服务。 三、在同一硬件上运行更多工作负载 Docker 轻巧快速。 它为基于虚拟机管理程序的虚拟机提供了可行、经济、高效的替代方案，因此使用者可以利用更多的计算能力来实现业务目标。 Docker 非常适合于高密度环境以及中小型部署，而使用者可以用更少的资源做更多的事情。 6.Docker的应用场景 Web 应用的自动化打包和发布。 自动化测试和持续集成、发布。 在服务型环境中部署和调整数据库或其他的后台应用。 从头编译或者扩展现有的 OpenShift 或 Cloud Foundry 平台来搭建自己的 PaaS 环境。","categories":[{"name":"Docker学习","slug":"Docker学习","permalink":"http://example.com/categories/Docker%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"http://example.com/tags/Docker/"}]},{"title":"我的第一篇文章","slug":"我的第一篇文章","date":"2023-01-01T03:14:22.000Z","updated":"2023-01-01T03:31:51.166Z","comments":true,"path":"2023/01/01/我的第一篇文章/","link":"","permalink":"http://example.com/2023/01/01/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/","excerpt":"","text":"前段时间偶然接触和使用到了框架的技术，就突然间来了兴趣来弄一个小破站。 从了解hexo框架到后面volantis主题安装和使用，到今天买域名绑定这小破站，折腾了一个星期吧。当然也不是全天候都在搞这个，但小白摸索总得需要时间。 说简单也不简单，说难也不难，在学习的道路上总得是自己不断摸索出来的。 后续有时间的话，就将自己建站的过程和想法以图文形式整理出来，现在就当纯属水一下文章。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-12-25T03:56:25.237Z","updated":"2023-01-01T02:35:40.619Z","comments":true,"path":"2022/12/25/hello-world/","link":"","permalink":"http://example.com/2022/12/25/hello-world/","excerpt":"","text":"本来是想把这篇自带的文章删除的，后来想想还是算了，当留个纪念。 Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"author":"sheep"}],"categories":[{"name":"Docker学习","slug":"Docker学习","permalink":"http://example.com/categories/Docker%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"http://example.com/tags/Docker/"}]}